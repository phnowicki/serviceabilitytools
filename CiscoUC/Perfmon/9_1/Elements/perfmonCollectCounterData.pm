
package CiscoUC::Perfmon::9_1::Elements::perfmonCollectCounterData;
use strict;
use warnings;

{ # BLOCK to scope variables

sub get_xmlns { 'http://schemas.cisco.com/ast/soap' }

__PACKAGE__->__set_name('perfmonCollectCounterData');
__PACKAGE__->__set_nillable();
__PACKAGE__->__set_minOccurs();
__PACKAGE__->__set_maxOccurs();
__PACKAGE__->__set_ref();

use base qw(
    SOAP::WSDL::XSD::Typelib::Element
    SOAP::WSDL::XSD::Typelib::ComplexType
);

our $XML_ATTRIBUTE_CLASS;
undef $XML_ATTRIBUTE_CLASS;

sub __get_attr_class {
    return $XML_ATTRIBUTE_CLASS;
}

use Class::Std::Fast::Storable constructor => 'none';
use base qw(SOAP::WSDL::XSD::Typelib::ComplexType);

Class::Std::initialize();

{ # BLOCK to scope variables

my %Host_of :ATTR(:get<Host>);
my %Object_of :ATTR(:get<Object>);

__PACKAGE__->_factory(
    [ qw(        Host
        Object

    ) ],
    {
        'Host' => \%Host_of,
        'Object' => \%Object_of,
    },
    {
        'Host' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
        'Object' => 'CiscoUC::Perfmon::9_1::Types::ObjectNameType',
    },
    {

        'Host' => 'Host',
        'Object' => 'Object',
    }
);

} # end BLOCK






} # end of BLOCK



1;


=pod

=head1 NAME

CiscoUC::Perfmon::9_1::Elements::perfmonCollectCounterData

=head1 DESCRIPTION

Perl data type class for the XML Schema defined element
perfmonCollectCounterData from the namespace http://schemas.cisco.com/ast/soap.







=head1 PROPERTIES

The following properties may be accessed using get_PROPERTY / set_PROPERTY
methods:

=over

=item * Host

 $element->set_Host($data);
 $element->get_Host();




=item * Object

 $element->set_Object($data);
 $element->get_Object();





=back


=head1 METHODS

=head2 new

 my $element = CiscoUC::Perfmon::9_1::Elements::perfmonCollectCounterData->new($data);

Constructor. The following data structure may be passed to new():

 {
   Host =>  $some_value, # string
   Object =>  { value => $some_value },
 },

=head1 AUTHOR

Generated by SOAP::WSDL

=cut

