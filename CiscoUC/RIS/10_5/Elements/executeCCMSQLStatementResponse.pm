
package CiscoUC::RIS::10_5::Elements::executeCCMSQLStatementResponse;
use strict;
use warnings;

{ # BLOCK to scope variables

sub get_xmlns { 'http://schemas.cisco.com/ast/soap' }

__PACKAGE__->__set_name('executeCCMSQLStatementResponse');
__PACKAGE__->__set_nillable();
__PACKAGE__->__set_minOccurs();
__PACKAGE__->__set_maxOccurs();
__PACKAGE__->__set_ref();

use base qw(
    SOAP::WSDL::XSD::Typelib::Element
    SOAP::WSDL::XSD::Typelib::ComplexType
);

our $XML_ATTRIBUTE_CLASS;
undef $XML_ATTRIBUTE_CLASS;

sub __get_attr_class {
    return $XML_ATTRIBUTE_CLASS;
}

use Class::Std::Fast::Storable constructor => 'none';
use base qw(SOAP::WSDL::XSD::Typelib::ComplexType);

Class::Std::initialize();

{ # BLOCK to scope variables

my %ExecuteSQLOutputData_of :ATTR(:get<ExecuteSQLOutputData>);

__PACKAGE__->_factory(
    [ qw(        ExecuteSQLOutputData

    ) ],
    {
        'ExecuteSQLOutputData' => \%ExecuteSQLOutputData_of,
    },
    {
        'ExecuteSQLOutputData' => 'CiscoUC::RIS::10_5::Types::ColumnValueType',
    },
    {

        'ExecuteSQLOutputData' => 'ExecuteSQLOutputData',
    }
);

} # end BLOCK






} # end of BLOCK



1;


=pod

=head1 NAME

CiscoUC::RIS::10_5::Elements::executeCCMSQLStatementResponse

=head1 DESCRIPTION

Perl data type class for the XML Schema defined element
executeCCMSQLStatementResponse from the namespace http://schemas.cisco.com/ast/soap.







=head1 PROPERTIES

The following properties may be accessed using get_PROPERTY / set_PROPERTY
methods:

=over

=item * ExecuteSQLOutputData

 $element->set_ExecuteSQLOutputData($data);
 $element->get_ExecuteSQLOutputData();





=back


=head1 METHODS

=head2 new

 my $element = CiscoUC::RIS::10_5::Elements::executeCCMSQLStatementResponse->new($data);

Constructor. The following data structure may be passed to new():

 {
   ExecuteSQLOutputData =>  { # CiscoUC::RIS::10_5::Types::ColumnValueType
     Name =>  { value => $some_value },
     Value =>  { value => $some_value },
   },
 },

=head1 AUTHOR

Generated by SOAP::WSDL

=cut

