package MyTypes::GetProductInformationListResponse;
use strict;
use warnings;


__PACKAGE__->_set_element_form_qualified(1);

sub get_xmlns { 'http://schemas.cisco.com/ast/soap' };

our $XML_ATTRIBUTE_CLASS;
undef $XML_ATTRIBUTE_CLASS;

sub __get_attr_class {
    return $XML_ATTRIBUTE_CLASS;
}

use Class::Std::Fast::Storable constructor => 'none';
use base qw(SOAP::WSDL::XSD::Typelib::ComplexType);

Class::Std::initialize();

{ # BLOCK to scope variables

my %ActiveServerVersion_of :ATTR(:get<ActiveServerVersion>);
my %PrimaryNode_of :ATTR(:get<PrimaryNode>);
my %SecondaryNode_of :ATTR(:get<SecondaryNode>);
my %Products_of :ATTR(:get<Products>);
my %Services_of :ATTR(:get<Services>);

__PACKAGE__->_factory(
    [ qw(        ActiveServerVersion
        PrimaryNode
        SecondaryNode
        Products
        Services

    ) ],
    {
        'ActiveServerVersion' => \%ActiveServerVersion_of,
        'PrimaryNode' => \%PrimaryNode_of,
        'SecondaryNode' => \%SecondaryNode_of,
        'Products' => \%Products_of,
        'Services' => \%Services_of,
    },
    {
        'ActiveServerVersion' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
        'PrimaryNode' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
        'SecondaryNode' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
        'Products' => 'MyTypes::ArrayOfInstalledProduct',
        'Services' => 'MyTypes::ArrayOfProductServiceSpecification',
    },
    {

        'ActiveServerVersion' => 'ActiveServerVersion',
        'PrimaryNode' => 'PrimaryNode',
        'SecondaryNode' => 'SecondaryNode',
        'Products' => 'Products',
        'Services' => 'Services',
    }
);

} # end BLOCK







1;


=pod

=head1 NAME

MyTypes::GetProductInformationListResponse

=head1 DESCRIPTION

Perl data type class for the XML Schema defined complexType
GetProductInformationListResponse from the namespace http://schemas.cisco.com/ast/soap.






=head2 PROPERTIES

The following properties may be accessed using get_PROPERTY / set_PROPERTY
methods:

=over

=item * ActiveServerVersion (min/maxOccurs: 1/1)


=item * PrimaryNode (min/maxOccurs: 1/1)


=item * SecondaryNode (min/maxOccurs: 1/1)


=item * Products (min/maxOccurs: 1/1)


=item * Services (min/maxOccurs: 1/1)




=back


=head1 METHODS

=head2 new

Constructor. The following data structure may be passed to new():

 { # MyTypes::GetProductInformationListResponse
   ActiveServerVersion =>  $some_value, # string
   PrimaryNode =>  $some_value, # string
   SecondaryNode =>  $some_value, # string
   Products =>  { # MyTypes::ArrayOfInstalledProduct
     item =>  { # MyTypes::InstalledProduct
       ProductName =>  $some_value, # string
       ProductVersion =>  $some_value, # string
       ProductDescription =>  $some_value, # string
       ProductID =>  $some_value, # string
       ShortName =>  $some_value, # string
     },
   },
   Services =>  { # MyTypes::ArrayOfProductServiceSpecification
     item =>  { # MyTypes::ProductServiceSpecification
       ServiceName =>  $some_value, # string
       ServiceType => $some_value, # ServiceTypes
       Deployable =>  $some_value, # boolean
       GroupName =>  $some_value, # string
       ProductID =>  $some_value, # string
       DependentServices =>  { # MyTypes::DependentServices
         Service =>  $some_value, # string
       },
     },
   },
 },




=head1 AUTHOR

Generated by SOAP::WSDL

=cut

